// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: dapr/proto/common/v1/common.proto

package common

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	duration "github.com/golang/protobuf/ptypes/duration"
<<<<<<< HEAD
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
=======
	math "math"
>>>>>>> upstream/master
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Type of HTTP 1.1 Methods
// RFC 7231: https://tools.ietf.org/html/rfc7231#page-24
type HTTPExtension_Verb int32

const (
	HTTPExtension_NONE    HTTPExtension_Verb = 0
	HTTPExtension_GET     HTTPExtension_Verb = 1
	HTTPExtension_HEAD    HTTPExtension_Verb = 2
	HTTPExtension_POST    HTTPExtension_Verb = 3
	HTTPExtension_PUT     HTTPExtension_Verb = 4
	HTTPExtension_DELETE  HTTPExtension_Verb = 5
	HTTPExtension_CONNECT HTTPExtension_Verb = 6
	HTTPExtension_OPTIONS HTTPExtension_Verb = 7
	HTTPExtension_TRACE   HTTPExtension_Verb = 8
)

// Enum value maps for HTTPExtension_Verb.
var (
	HTTPExtension_Verb_name = map[int32]string{
		0: "NONE",
		1: "GET",
		2: "HEAD",
		3: "POST",
		4: "PUT",
		5: "DELETE",
		6: "CONNECT",
		7: "OPTIONS",
		8: "TRACE",
	}
	HTTPExtension_Verb_value = map[string]int32{
		"NONE":    0,
		"GET":     1,
		"HEAD":    2,
		"POST":    3,
		"PUT":     4,
		"DELETE":  5,
		"CONNECT": 6,
		"OPTIONS": 7,
		"TRACE":   8,
	}
)

func (x HTTPExtension_Verb) Enum() *HTTPExtension_Verb {
	p := new(HTTPExtension_Verb)
	*p = x
	return p
}

func (x HTTPExtension_Verb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPExtension_Verb) Descriptor() protoreflect.EnumDescriptor {
	return file_dapr_proto_common_v1_common_proto_enumTypes[0].Descriptor()
}

func (HTTPExtension_Verb) Type() protoreflect.EnumType {
	return &file_dapr_proto_common_v1_common_proto_enumTypes[0]
}

func (x HTTPExtension_Verb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPExtension_Verb.Descriptor instead.
func (HTTPExtension_Verb) EnumDescriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{0, 0}
}

// Enum describing the supported concurrency for state.
type StateOptions_StateConcurrency int32

const (
	StateOptions_CONCURRENCY_UNSPECIFIED StateOptions_StateConcurrency = 0
	StateOptions_CONCURRENCY_FIRST_WRITE StateOptions_StateConcurrency = 1
	StateOptions_CONCURRENCY_LAST_WRITE  StateOptions_StateConcurrency = 2
)

// Enum value maps for StateOptions_StateConcurrency.
var (
	StateOptions_StateConcurrency_name = map[int32]string{
		0: "CONCURRENCY_UNSPECIFIED",
		1: "CONCURRENCY_FIRST_WRITE",
		2: "CONCURRENCY_LAST_WRITE",
	}
	StateOptions_StateConcurrency_value = map[string]int32{
		"CONCURRENCY_UNSPECIFIED": 0,
		"CONCURRENCY_FIRST_WRITE": 1,
		"CONCURRENCY_LAST_WRITE":  2,
	}
)

func (x StateOptions_StateConcurrency) Enum() *StateOptions_StateConcurrency {
	p := new(StateOptions_StateConcurrency)
	*p = x
	return p
}

func (x StateOptions_StateConcurrency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateOptions_StateConcurrency) Descriptor() protoreflect.EnumDescriptor {
	return file_dapr_proto_common_v1_common_proto_enumTypes[1].Descriptor()
}

func (StateOptions_StateConcurrency) Type() protoreflect.EnumType {
	return &file_dapr_proto_common_v1_common_proto_enumTypes[1]
}

func (x StateOptions_StateConcurrency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateOptions_StateConcurrency.Descriptor instead.
func (StateOptions_StateConcurrency) EnumDescriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{4, 0}
}

// Enum describing the supported consistency for state.
type StateOptions_StateConsistency int32

const (
	StateOptions_CONSISTENCY_UNSPECIFIED StateOptions_StateConsistency = 0
	StateOptions_CONSISTENCY_EVENTUAL    StateOptions_StateConsistency = 1
	StateOptions_CONSISTENCY_STRONG      StateOptions_StateConsistency = 2
)

// Enum value maps for StateOptions_StateConsistency.
var (
	StateOptions_StateConsistency_name = map[int32]string{
		0: "CONSISTENCY_UNSPECIFIED",
		1: "CONSISTENCY_EVENTUAL",
		2: "CONSISTENCY_STRONG",
	}
	StateOptions_StateConsistency_value = map[string]int32{
		"CONSISTENCY_UNSPECIFIED": 0,
		"CONSISTENCY_EVENTUAL":    1,
		"CONSISTENCY_STRONG":      2,
	}
)

func (x StateOptions_StateConsistency) Enum() *StateOptions_StateConsistency {
	p := new(StateOptions_StateConsistency)
	*p = x
	return p
}

func (x StateOptions_StateConsistency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateOptions_StateConsistency) Descriptor() protoreflect.EnumDescriptor {
	return file_dapr_proto_common_v1_common_proto_enumTypes[2].Descriptor()
}

func (StateOptions_StateConsistency) Type() protoreflect.EnumType {
	return &file_dapr_proto_common_v1_common_proto_enumTypes[2]
}

func (x StateOptions_StateConsistency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateOptions_StateConsistency.Descriptor instead.
func (StateOptions_StateConsistency) EnumDescriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{4, 1}
}

// Enum describing the support retry pattern
type StateRetryPolicy_RetryPattern int32

const (
	StateRetryPolicy_RETRY_UNSPECIFIED StateRetryPolicy_RetryPattern = 0
	StateRetryPolicy_RETRY_LINEAR      StateRetryPolicy_RetryPattern = 1
	StateRetryPolicy_RETRY_EXPONENTIAL StateRetryPolicy_RetryPattern = 2
)

// Enum value maps for StateRetryPolicy_RetryPattern.
var (
	StateRetryPolicy_RetryPattern_name = map[int32]string{
		0: "RETRY_UNSPECIFIED",
		1: "RETRY_LINEAR",
		2: "RETRY_EXPONENTIAL",
	}
	StateRetryPolicy_RetryPattern_value = map[string]int32{
		"RETRY_UNSPECIFIED": 0,
		"RETRY_LINEAR":      1,
		"RETRY_EXPONENTIAL": 2,
	}
)

func (x StateRetryPolicy_RetryPattern) Enum() *StateRetryPolicy_RetryPattern {
	p := new(StateRetryPolicy_RetryPattern)
	*p = x
	return p
}

func (x StateRetryPolicy_RetryPattern) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateRetryPolicy_RetryPattern) Descriptor() protoreflect.EnumDescriptor {
	return file_dapr_proto_common_v1_common_proto_enumTypes[3].Descriptor()
}

func (StateRetryPolicy_RetryPattern) Type() protoreflect.EnumType {
	return &file_dapr_proto_common_v1_common_proto_enumTypes[3]
}

func (x StateRetryPolicy_RetryPattern) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateRetryPolicy_RetryPattern.Descriptor instead.
func (StateRetryPolicy_RetryPattern) EnumDescriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{5, 0}
}

// Enum describing the supported concurrency for state.
type StateOptions_StateConcurrency int32

const (
	StateOptions_CONCURRENCY_UNSPECIFIED StateOptions_StateConcurrency = 0
	StateOptions_CONCURRENCY_FIRST_WRITE StateOptions_StateConcurrency = 1
	StateOptions_CONCURRENCY_LAST_WRITE  StateOptions_StateConcurrency = 2
)

var StateOptions_StateConcurrency_name = map[int32]string{
	0: "CONCURRENCY_UNSPECIFIED",
	1: "CONCURRENCY_FIRST_WRITE",
	2: "CONCURRENCY_LAST_WRITE",
}

var StateOptions_StateConcurrency_value = map[string]int32{
	"CONCURRENCY_UNSPECIFIED": 0,
	"CONCURRENCY_FIRST_WRITE": 1,
	"CONCURRENCY_LAST_WRITE":  2,
}

func (x StateOptions_StateConcurrency) String() string {
	return proto.EnumName(StateOptions_StateConcurrency_name, int32(x))
}

func (StateOptions_StateConcurrency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c448f683ad359d5, []int{4, 0}
}

// Enum describing the supported consistency for state.
type StateOptions_StateConsistency int32

const (
	StateOptions_CONSISTENCY_UNSPECIFIED StateOptions_StateConsistency = 0
	StateOptions_CONSISTENCY_EVENTUAL    StateOptions_StateConsistency = 1
	StateOptions_CONSISTENCY_STRONG      StateOptions_StateConsistency = 2
)

var StateOptions_StateConsistency_name = map[int32]string{
	0: "CONSISTENCY_UNSPECIFIED",
	1: "CONSISTENCY_EVENTUAL",
	2: "CONSISTENCY_STRONG",
}

var StateOptions_StateConsistency_value = map[string]int32{
	"CONSISTENCY_UNSPECIFIED": 0,
	"CONSISTENCY_EVENTUAL":    1,
	"CONSISTENCY_STRONG":      2,
}

func (x StateOptions_StateConsistency) String() string {
	return proto.EnumName(StateOptions_StateConsistency_name, int32(x))
}

func (StateOptions_StateConsistency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c448f683ad359d5, []int{4, 1}
}

// Enum describing the support retry pattern
type StateRetryPolicy_RetryPattern int32

const (
	StateRetryPolicy_RETRY_UNSPECIFIED StateRetryPolicy_RetryPattern = 0
	StateRetryPolicy_RETRY_LINEAR      StateRetryPolicy_RetryPattern = 1
	StateRetryPolicy_RETRY_EXPONENTIAL StateRetryPolicy_RetryPattern = 2
)

var StateRetryPolicy_RetryPattern_name = map[int32]string{
	0: "RETRY_UNSPECIFIED",
	1: "RETRY_LINEAR",
	2: "RETRY_EXPONENTIAL",
}

var StateRetryPolicy_RetryPattern_value = map[string]int32{
	"RETRY_UNSPECIFIED": 0,
	"RETRY_LINEAR":      1,
	"RETRY_EXPONENTIAL": 2,
}

func (x StateRetryPolicy_RetryPattern) String() string {
	return proto.EnumName(StateRetryPolicy_RetryPattern_name, int32(x))
}

func (StateRetryPolicy_RetryPattern) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c448f683ad359d5, []int{5, 0}
}

// HTTPExtension includes HTTP verb and querystring
// when Dapr runtime delivers HTTP content.
//
// For example, when callers calls http invoke api
// POST http://localhost:3500/v1.0/invoke/<app_id>/method/<method>?query1=value1&query2=value2
//
// Dapr runtime will parse POST as a verb and extract querystring to quersytring map.
type HTTPExtension struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

=======
>>>>>>> upstream/master
	// Required. HTTP verb.
	Verb HTTPExtension_Verb `protobuf:"varint,1,opt,name=verb,proto3,enum=dapr.proto.common.v1.HTTPExtension_Verb" json:"verb,omitempty"`
	// querystring includes HTTP querystring.
	Querystring map[string]string `protobuf:"bytes,2,rep,name=querystring,proto3" json:"querystring,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HTTPExtension) Reset() {
	*x = HTTPExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dapr_proto_common_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPExtension) ProtoMessage() {}

func (x *HTTPExtension) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_common_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPExtension.ProtoReflect.Descriptor instead.
func (*HTTPExtension) Descriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *HTTPExtension) GetVerb() HTTPExtension_Verb {
	if x != nil {
		return x.Verb
	}
	return HTTPExtension_NONE
}

func (x *HTTPExtension) GetQuerystring() map[string]string {
	if x != nil {
		return x.Querystring
	}
	return nil
}

// InvokeRequest is the message to invoke a method with the data.
// This message is used in InvokeService of Dapr gRPC Service and OnInvoke
// of AppCallback gRPC service.
type InvokeRequest struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

=======
>>>>>>> upstream/master
	// Required. method is a method name which will be invoked by caller.
	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	// Required. Bytes value or Protobuf message which caller sent.
	// Dapr treats Any.value as bytes type if Any.type_url is unset.
	Data *any.Any `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// The type of data content.
	//
	// This field is required if data delivers http request body
	// Otherwise, this is optional.
	ContentType string `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// HTTP specific fields if request conveys http-compatible request.
	//
	// This field is required for http-compatible request. Otherwise,
	// this field is optional.
<<<<<<< HEAD
	HttpExtension *HTTPExtension `protobuf:"bytes,4,opt,name=http_extension,json=httpExtension,proto3" json:"http_extension,omitempty"`
=======
	HttpExtension        *HTTPExtension `protobuf:"bytes,4,opt,name=http_extension,json=httpExtension,proto3" json:"http_extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
>>>>>>> upstream/master
}

func (x *InvokeRequest) Reset() {
	*x = InvokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dapr_proto_common_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeRequest) ProtoMessage() {}

func (x *InvokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_common_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeRequest.ProtoReflect.Descriptor instead.
func (*InvokeRequest) Descriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *InvokeRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *InvokeRequest) GetData() *any.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvokeRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *InvokeRequest) GetHttpExtension() *HTTPExtension {
	if x != nil {
		return x.HttpExtension
	}
	return nil
}

// InvokeResponse is the response message inclduing data and its content type
// from app callback.
// This message is used in InvokeService of Dapr gRPC Service and OnInvoke
// of AppCallback gRPC service.
type InvokeResponse struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The content body of InvokeService response.
	Data *any.Any `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Required. The type of data content.
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *InvokeResponse) Reset() {
	*x = InvokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dapr_proto_common_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeResponse) ProtoMessage() {}

func (x *InvokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_common_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
=======
	// Required. The content body of InvokeService response.
	Data *any.Any `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Required. The type of data content.
	ContentType          string   `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
>>>>>>> upstream/master
}

// Deprecated: Use InvokeResponse.ProtoReflect.Descriptor instead.
func (*InvokeResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *InvokeResponse) GetData() *any.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvokeResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// StateItem represents state key, value, and additional options to save state.
type StateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The state key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Required. The state data for key
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// The entity tag which represents the specific version of data.
	// The exact ETag format is defined by the corresponding data store.
	Etag string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	// The metadata which will be passed to state store component.
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Options for concurrency, consistency, and retry_policy to save the state.
	Options *StateOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *StateItem) Reset() {
	*x = StateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dapr_proto_common_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateItem) ProtoMessage() {}

func (x *StateItem) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_common_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateItem.ProtoReflect.Descriptor instead.
func (*StateItem) Descriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *StateItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StateItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StateItem) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

<<<<<<< HEAD
func (x *StateItem) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StateItem) GetOptions() *StateOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// StateOptions configures concurrency, consistency, and retry policy for state operations
type StateOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Concurrency StateOptions_StateConcurrency `protobuf:"varint,1,opt,name=concurrency,proto3,enum=dapr.proto.common.v1.StateOptions_StateConcurrency" json:"concurrency,omitempty"`
	Consistency StateOptions_StateConsistency `protobuf:"varint,2,opt,name=consistency,proto3,enum=dapr.proto.common.v1.StateOptions_StateConsistency" json:"consistency,omitempty"`
	RetryPolicy *StateRetryPolicy             `protobuf:"bytes,3,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
}

func (x *StateOptions) Reset() {
	*x = StateOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dapr_proto_common_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateOptions) ProtoMessage() {}

func (x *StateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_common_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateOptions.ProtoReflect.Descriptor instead.
func (*StateOptions) Descriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *StateOptions) GetConcurrency() StateOptions_StateConcurrency {
	if x != nil {
		return x.Concurrency
=======
// StateSaveRequest represents state and options to save the state value.
type StateSaveRequest struct {
	// Required. The state key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Required. The state data for key
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// The entity tag which represents the specific version of data.
	// The exact ETag format is defined by the corresponding data store.
	Etag string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	// The metadata which will be passed to state store component.
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Options for concurrency, consistency, and retry_policy to save the state.
	Options              *StateOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StateSaveRequest) Reset()         { *m = StateSaveRequest{} }
func (m *StateSaveRequest) String() string { return proto.CompactTextString(m) }
func (*StateSaveRequest) ProtoMessage()    {}
func (*StateSaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c448f683ad359d5, []int{3}
}

func (m *StateSaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateSaveRequest.Unmarshal(m, b)
}
func (m *StateSaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateSaveRequest.Marshal(b, m, deterministic)
}
func (m *StateSaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateSaveRequest.Merge(m, src)
}
func (m *StateSaveRequest) XXX_Size() int {
	return xxx_messageInfo_StateSaveRequest.Size(m)
}
func (m *StateSaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StateSaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StateSaveRequest proto.InternalMessageInfo

func (m *StateSaveRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StateSaveRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *StateSaveRequest) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *StateSaveRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *StateSaveRequest) GetOptions() *StateOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// StateOptions configures concurrency, consistency, and retry policy for state operations
type StateOptions struct {
	Concurrency          StateOptions_StateConcurrency `protobuf:"varint,1,opt,name=concurrency,proto3,enum=dapr.proto.common.v1.StateOptions_StateConcurrency" json:"concurrency,omitempty"`
	Consistency          StateOptions_StateConsistency `protobuf:"varint,2,opt,name=consistency,proto3,enum=dapr.proto.common.v1.StateOptions_StateConsistency" json:"consistency,omitempty"`
	RetryPolicy          *StateRetryPolicy             `protobuf:"bytes,3,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *StateOptions) Reset()         { *m = StateOptions{} }
func (m *StateOptions) String() string { return proto.CompactTextString(m) }
func (*StateOptions) ProtoMessage()    {}
func (*StateOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c448f683ad359d5, []int{4}
}

func (m *StateOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateOptions.Unmarshal(m, b)
}
func (m *StateOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateOptions.Marshal(b, m, deterministic)
}
func (m *StateOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateOptions.Merge(m, src)
}
func (m *StateOptions) XXX_Size() int {
	return xxx_messageInfo_StateOptions.Size(m)
}
func (m *StateOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StateOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StateOptions proto.InternalMessageInfo

func (m *StateOptions) GetConcurrency() StateOptions_StateConcurrency {
	if m != nil {
		return m.Concurrency
>>>>>>> upstream/master
	}
	return StateOptions_CONCURRENCY_UNSPECIFIED
}

<<<<<<< HEAD
func (x *StateOptions) GetConsistency() StateOptions_StateConsistency {
	if x != nil {
		return x.Consistency
=======
func (m *StateOptions) GetConsistency() StateOptions_StateConsistency {
	if m != nil {
		return m.Consistency
>>>>>>> upstream/master
	}
	return StateOptions_CONSISTENCY_UNSPECIFIED
}

<<<<<<< HEAD
func (x *StateOptions) GetRetryPolicy() *StateRetryPolicy {
	if x != nil {
		return x.RetryPolicy
=======
func (m *StateOptions) GetRetryPolicy() *StateRetryPolicy {
	if m != nil {
		return m.RetryPolicy
>>>>>>> upstream/master
	}
	return nil
}

// StateRetryPolicy represents retry policy to set and delete state operations.
type StateRetryPolicy struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

=======
>>>>>>> upstream/master
	// Maximum number of retries.
	Threshold int32 `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// Retry pattern.
	Pattern StateRetryPolicy_RetryPattern `protobuf:"varint,2,opt,name=pattern,proto3,enum=dapr.proto.common.v1.StateRetryPolicy_RetryPattern" json:"pattern,omitempty"`
	// Initial delay between retries.
<<<<<<< HEAD
	Interval *duration.Duration `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *StateRetryPolicy) Reset() {
	*x = StateRetryPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dapr_proto_common_v1_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRetryPolicy) ProtoMessage() {}

func (x *StateRetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_common_v1_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRetryPolicy.ProtoReflect.Descriptor instead.
func (*StateRetryPolicy) Descriptor() ([]byte, []int) {
	return file_dapr_proto_common_v1_common_proto_rawDescGZIP(), []int{5}
}

func (x *StateRetryPolicy) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
=======
	Interval             *duration.Duration `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StateRetryPolicy) Reset()         { *m = StateRetryPolicy{} }
func (m *StateRetryPolicy) String() string { return proto.CompactTextString(m) }
func (*StateRetryPolicy) ProtoMessage()    {}
func (*StateRetryPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c448f683ad359d5, []int{5}
}

func (m *StateRetryPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateRetryPolicy.Unmarshal(m, b)
}
func (m *StateRetryPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateRetryPolicy.Marshal(b, m, deterministic)
}
func (m *StateRetryPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateRetryPolicy.Merge(m, src)
}
func (m *StateRetryPolicy) XXX_Size() int {
	return xxx_messageInfo_StateRetryPolicy.Size(m)
}
func (m *StateRetryPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_StateRetryPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_StateRetryPolicy proto.InternalMessageInfo

func (m *StateRetryPolicy) GetThreshold() int32 {
	if m != nil {
		return m.Threshold
>>>>>>> upstream/master
	}
	return 0
}

<<<<<<< HEAD
func (x *StateRetryPolicy) GetPattern() StateRetryPolicy_RetryPattern {
	if x != nil {
		return x.Pattern
=======
func (m *StateRetryPolicy) GetPattern() StateRetryPolicy_RetryPattern {
	if m != nil {
		return m.Pattern
>>>>>>> upstream/master
	}
	return StateRetryPolicy_RETRY_UNSPECIFIED
}

<<<<<<< HEAD
func (x *StateRetryPolicy) GetInterval() *duration.Duration {
	if x != nil {
		return x.Interval
=======
func (m *StateRetryPolicy) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
>>>>>>> upstream/master
	}
	return nil
}

<<<<<<< HEAD
var File_dapr_proto_common_v1_common_proto protoreflect.FileDescriptor

var file_dapr_proto_common_v1_common_proto_rawDesc = []byte{
	0x0a, 0x21, 0x64, 0x61, 0x70, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x02, 0x0a, 0x0d, 0x48, 0x54, 0x54, 0x50, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x04, 0x76, 0x65, 0x72, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x62, 0x52, 0x04,
	0x76, 0x65, 0x72, 0x62, 0x12, 0x56, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x61, 0x70, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x54, 0x54, 0x50, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x3e, 0x0a, 0x10,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x67, 0x0a, 0x04,
	0x56, 0x65, 0x72, 0x62, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x55, 0x54, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x05,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x06, 0x12, 0x0b, 0x0a,
	0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52,
	0x41, 0x43, 0x45, 0x10, 0x08, 0x22, 0xc0, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0e,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61,
	0x67, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd4, 0x03, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x55, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x55, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x49, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64,
	0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x22, 0x68, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4c,
	0x41, 0x53, 0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x02, 0x22, 0x61, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53,
	0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x86,
	0x02, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x4d, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x64, 0x61, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x4e, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x54, 0x52, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x41, 0x52, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x4e, 0x45,
	0x4e, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x42, 0x6c, 0x0a, 0x0a, 0x69, 0x6f, 0x2e, 0x64, 0x61,
	0x70, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x61, 0x70, 0x72, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x64, 0x61, 0x70, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xaa, 0x02, 0x1b, 0x44, 0x61, 0x70, 0x72, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dapr_proto_common_v1_common_proto_rawDescOnce sync.Once
	file_dapr_proto_common_v1_common_proto_rawDescData = file_dapr_proto_common_v1_common_proto_rawDesc
)

func file_dapr_proto_common_v1_common_proto_rawDescGZIP() []byte {
	file_dapr_proto_common_v1_common_proto_rawDescOnce.Do(func() {
		file_dapr_proto_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_dapr_proto_common_v1_common_proto_rawDescData)
	})
	return file_dapr_proto_common_v1_common_proto_rawDescData
}

var file_dapr_proto_common_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_dapr_proto_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dapr_proto_common_v1_common_proto_goTypes = []interface{}{
	(HTTPExtension_Verb)(0),            // 0: dapr.proto.common.v1.HTTPExtension.Verb
	(StateOptions_StateConcurrency)(0), // 1: dapr.proto.common.v1.StateOptions.StateConcurrency
	(StateOptions_StateConsistency)(0), // 2: dapr.proto.common.v1.StateOptions.StateConsistency
	(StateRetryPolicy_RetryPattern)(0), // 3: dapr.proto.common.v1.StateRetryPolicy.RetryPattern
	(*HTTPExtension)(nil),              // 4: dapr.proto.common.v1.HTTPExtension
	(*InvokeRequest)(nil),              // 5: dapr.proto.common.v1.InvokeRequest
	(*InvokeResponse)(nil),             // 6: dapr.proto.common.v1.InvokeResponse
	(*StateItem)(nil),                  // 7: dapr.proto.common.v1.StateItem
	(*StateOptions)(nil),               // 8: dapr.proto.common.v1.StateOptions
	(*StateRetryPolicy)(nil),           // 9: dapr.proto.common.v1.StateRetryPolicy
	nil,                                // 10: dapr.proto.common.v1.HTTPExtension.QuerystringEntry
	nil,                                // 11: dapr.proto.common.v1.StateItem.MetadataEntry
	(*any.Any)(nil),                    // 12: google.protobuf.Any
	(*duration.Duration)(nil),          // 13: google.protobuf.Duration
}
var file_dapr_proto_common_v1_common_proto_depIdxs = []int32{
	0,  // 0: dapr.proto.common.v1.HTTPExtension.verb:type_name -> dapr.proto.common.v1.HTTPExtension.Verb
	10, // 1: dapr.proto.common.v1.HTTPExtension.querystring:type_name -> dapr.proto.common.v1.HTTPExtension.QuerystringEntry
	12, // 2: dapr.proto.common.v1.InvokeRequest.data:type_name -> google.protobuf.Any
	4,  // 3: dapr.proto.common.v1.InvokeRequest.http_extension:type_name -> dapr.proto.common.v1.HTTPExtension
	12, // 4: dapr.proto.common.v1.InvokeResponse.data:type_name -> google.protobuf.Any
	11, // 5: dapr.proto.common.v1.StateItem.metadata:type_name -> dapr.proto.common.v1.StateItem.MetadataEntry
	8,  // 6: dapr.proto.common.v1.StateItem.options:type_name -> dapr.proto.common.v1.StateOptions
	1,  // 7: dapr.proto.common.v1.StateOptions.concurrency:type_name -> dapr.proto.common.v1.StateOptions.StateConcurrency
	2,  // 8: dapr.proto.common.v1.StateOptions.consistency:type_name -> dapr.proto.common.v1.StateOptions.StateConsistency
	9,  // 9: dapr.proto.common.v1.StateOptions.retry_policy:type_name -> dapr.proto.common.v1.StateRetryPolicy
	3,  // 10: dapr.proto.common.v1.StateRetryPolicy.pattern:type_name -> dapr.proto.common.v1.StateRetryPolicy.RetryPattern
	13, // 11: dapr.proto.common.v1.StateRetryPolicy.interval:type_name -> google.protobuf.Duration
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_dapr_proto_common_v1_common_proto_init() }
func file_dapr_proto_common_v1_common_proto_init() {
	if File_dapr_proto_common_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dapr_proto_common_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dapr_proto_common_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dapr_proto_common_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dapr_proto_common_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dapr_proto_common_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dapr_proto_common_v1_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRetryPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dapr_proto_common_v1_common_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dapr_proto_common_v1_common_proto_goTypes,
		DependencyIndexes: file_dapr_proto_common_v1_common_proto_depIdxs,
		EnumInfos:         file_dapr_proto_common_v1_common_proto_enumTypes,
		MessageInfos:      file_dapr_proto_common_v1_common_proto_msgTypes,
	}.Build()
	File_dapr_proto_common_v1_common_proto = out.File
	file_dapr_proto_common_v1_common_proto_rawDesc = nil
	file_dapr_proto_common_v1_common_proto_goTypes = nil
	file_dapr_proto_common_v1_common_proto_depIdxs = nil
=======
func init() {
	proto.RegisterEnum("dapr.proto.common.v1.HTTPExtension_Verb", HTTPExtension_Verb_name, HTTPExtension_Verb_value)
	proto.RegisterEnum("dapr.proto.common.v1.StateOptions_StateConcurrency", StateOptions_StateConcurrency_name, StateOptions_StateConcurrency_value)
	proto.RegisterEnum("dapr.proto.common.v1.StateOptions_StateConsistency", StateOptions_StateConsistency_name, StateOptions_StateConsistency_value)
	proto.RegisterEnum("dapr.proto.common.v1.StateRetryPolicy_RetryPattern", StateRetryPolicy_RetryPattern_name, StateRetryPolicy_RetryPattern_value)
	proto.RegisterType((*HTTPExtension)(nil), "dapr.proto.common.v1.HTTPExtension")
	proto.RegisterMapType((map[string]string)(nil), "dapr.proto.common.v1.HTTPExtension.QuerystringEntry")
	proto.RegisterType((*InvokeRequest)(nil), "dapr.proto.common.v1.InvokeRequest")
	proto.RegisterType((*InvokeResponse)(nil), "dapr.proto.common.v1.InvokeResponse")
	proto.RegisterType((*StateSaveRequest)(nil), "dapr.proto.common.v1.StateSaveRequest")
	proto.RegisterMapType((map[string]string)(nil), "dapr.proto.common.v1.StateSaveRequest.MetadataEntry")
	proto.RegisterType((*StateOptions)(nil), "dapr.proto.common.v1.StateOptions")
	proto.RegisterType((*StateRetryPolicy)(nil), "dapr.proto.common.v1.StateRetryPolicy")
}

func init() { proto.RegisterFile("dapr/proto/common/v1/common.proto", fileDescriptor_0c448f683ad359d5) }

var fileDescriptor_0c448f683ad359d5 = []byte{
	// 840 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5d, 0x6e, 0xdb, 0x46,
	0x17, 0x0d, 0x29, 0xc9, 0xb2, 0xaf, 0x64, 0x63, 0xbe, 0x81, 0x3f, 0x57, 0x51, 0x8a, 0x22, 0x61,
	0x81, 0xc2, 0x2f, 0xa5, 0x60, 0xa5, 0x05, 0x8a, 0x26, 0x28, 0xa0, 0x50, 0x13, 0x87, 0x85, 0x42,
	0xb2, 0x43, 0xca, 0xfd, 0x01, 0x0a, 0x81, 0x92, 0xa6, 0x12, 0x61, 0x99, 0x64, 0x86, 0x23, 0xa2,
	0xdc, 0x40, 0x37, 0xd1, 0x1d, 0x74, 0x15, 0x5d, 0x41, 0x9f, 0xba, 0xa0, 0x82, 0x43, 0x4a, 0x62,
	0x14, 0xc3, 0xb1, 0xdf, 0xee, 0xdf, 0x39, 0x73, 0xee, 0xbd, 0x43, 0x0e, 0x3c, 0x9b, 0xfb, 0x31,
	0xef, 0xc5, 0x3c, 0x12, 0x51, 0x6f, 0x16, 0xdd, 0xdc, 0x44, 0x61, 0x2f, 0xbd, 0x28, 0x2d, 0x5d,
	0x86, 0xf1, 0x69, 0x5e, 0x52, 0xd8, 0x7a, 0x99, 0x48, 0x2f, 0xba, 0x8f, 0x17, 0x51, 0xb4, 0x58,
	0xb1, 0x02, 0x3a, 0x5d, 0xff, 0xd6, 0xf3, 0xc3, 0xac, 0x28, 0xea, 0x7e, 0xb6, 0x9f, 0x9a, 0xaf,
	0xb9, 0x2f, 0x82, 0x0d, 0xa1, 0xf6, 0x8f, 0x0a, 0xc7, 0x6f, 0x3c, 0xcf, 0x21, 0xbf, 0x0b, 0x16,
	0x26, 0x41, 0x14, 0xe2, 0x97, 0x50, 0x4f, 0x19, 0x9f, 0x76, 0x94, 0xa7, 0xca, 0xf9, 0x49, 0xff,
	0x5c, 0xbf, 0xed, 0x44, 0xfd, 0x3d, 0x88, 0x7e, 0xc5, 0xf8, 0x94, 0x4a, 0x14, 0xbe, 0x82, 0xd6,
	0xbb, 0x35, 0xe3, 0x59, 0x22, 0x78, 0x10, 0x2e, 0x3a, 0xea, 0xd3, 0xda, 0x79, 0xab, 0xff, 0xd5,
	0x7d, 0x48, 0x7e, 0xd8, 0xc1, 0x48, 0x28, 0x78, 0x46, 0xab, 0x44, 0xdd, 0xef, 0x00, 0xed, 0x17,
	0x60, 0x04, 0xb5, 0x6b, 0x96, 0x49, 0xa1, 0x47, 0x34, 0x37, 0xf1, 0x29, 0x34, 0x52, 0x7f, 0xb5,
	0x66, 0x1d, 0x55, 0xc6, 0x0a, 0xe7, 0x5b, 0xf5, 0x1b, 0x45, 0x5b, 0x40, 0x3d, 0x57, 0x89, 0x0f,
	0xa1, 0x6e, 0xd9, 0x16, 0x41, 0x8f, 0x70, 0x13, 0x6a, 0x97, 0xc4, 0x43, 0x4a, 0x1e, 0x7a, 0x43,
	0x06, 0x43, 0xa4, 0xe6, 0x96, 0x63, 0xbb, 0x1e, 0xaa, 0xe5, 0x49, 0x67, 0xec, 0xa1, 0x3a, 0x06,
	0x38, 0x18, 0x92, 0x11, 0xf1, 0x08, 0x6a, 0xe0, 0x16, 0x34, 0x0d, 0xdb, 0xb2, 0x88, 0xe1, 0xa1,
	0x83, 0xdc, 0xb1, 0x1d, 0xcf, 0xb4, 0x2d, 0x17, 0x35, 0xf1, 0x11, 0x34, 0x3c, 0x3a, 0x30, 0x08,
	0x3a, 0xd4, 0xfe, 0x56, 0xe0, 0xd8, 0x0c, 0xd3, 0xe8, 0x9a, 0x51, 0xf6, 0x6e, 0xcd, 0x12, 0x81,
	0xcf, 0xe0, 0xe0, 0x86, 0x89, 0x65, 0x34, 0x2f, 0x95, 0x96, 0x1e, 0x3e, 0x87, 0xfa, 0xdc, 0x17,
	0xbe, 0xd4, 0xda, 0xea, 0x9f, 0xea, 0xc5, 0xa6, 0xf4, 0xcd, 0xa6, 0xf4, 0x41, 0x98, 0x51, 0x59,
	0x81, 0x9f, 0x41, 0x7b, 0x16, 0x85, 0x82, 0x85, 0x62, 0x22, 0xb2, 0x98, 0x75, 0x6a, 0x92, 0xa7,
	0x55, 0xc6, 0xbc, 0x2c, 0x66, 0xf8, 0x7b, 0x38, 0x59, 0x0a, 0x11, 0x4f, 0xd8, 0x66, 0x9e, 0x9d,
	0xba, 0xa4, 0xfd, 0xfc, 0x1e, 0xa3, 0xa7, 0xc7, 0x39, 0x74, 0xeb, 0x6a, 0xbf, 0xc2, 0xc9, 0xa6,
	0x83, 0x24, 0x8e, 0xc2, 0x84, 0x6d, 0xa5, 0x2a, 0x0f, 0x96, 0xaa, 0x7e, 0x20, 0x55, 0xfb, 0x53,
	0x05, 0xe4, 0x0a, 0x5f, 0x30, 0xd7, 0x4f, 0xb7, 0x43, 0xfa, 0xc8, 0x2e, 0xdb, 0xe5, 0x2e, 0x31,
	0x86, 0x3a, 0x13, 0xfe, 0xa2, 0x1c, 0x81, 0xb4, 0xb1, 0x03, 0x87, 0x37, 0x4c, 0xf8, 0x52, 0x61,
	0xfd, 0xae, 0x0b, 0xb7, 0x7f, 0xaa, 0xfe, 0xb6, 0x84, 0x15, 0x17, 0x6e, 0xcb, 0x82, 0x5f, 0x42,
	0x33, 0x8a, 0xf3, 0xaf, 0x24, 0xe9, 0x34, 0x64, 0xcb, 0xda, 0x1d, 0x84, 0x76, 0x51, 0x49, 0x37,
	0x90, 0xee, 0x0b, 0x38, 0x7e, 0x8f, 0xf8, 0x41, 0x17, 0xf5, 0xdf, 0x1a, 0xb4, 0xab, 0xb4, 0x78,
	0x0c, 0xf9, 0xf4, 0x66, 0x6b, 0xce, 0x59, 0x38, 0xcb, 0xca, 0xcf, 0xf2, 0xf9, 0xc7, 0xf5, 0x14,
	0x8e, 0xb1, 0x83, 0xd2, 0x2a, 0x4f, 0x49, 0x9b, 0x04, 0x89, 0x90, 0xb4, 0xea, 0x83, 0x69, 0x37,
	0x50, 0x5a, 0xe5, 0xc1, 0x26, 0xb4, 0x39, 0x13, 0x3c, 0x9b, 0xc4, 0xd1, 0x2a, 0x98, 0x65, 0x72,
	0x4f, 0xad, 0xfe, 0x17, 0x77, 0xf0, 0xd2, 0xbc, 0xdc, 0x91, 0xd5, 0xb4, 0xc5, 0x77, 0x8e, 0xb6,
	0x2c, 0xaf, 0x49, 0xa5, 0x05, 0xfc, 0x04, 0x3e, 0x31, 0x6c, 0xcb, 0x18, 0x53, 0x4a, 0x2c, 0xe3,
	0xe7, 0xc9, 0xd8, 0x72, 0x1d, 0x62, 0x98, 0xaf, 0x4d, 0x32, 0x44, 0x8f, 0xf6, 0x93, 0xaf, 0x4d,
	0xea, 0x7a, 0x93, 0x1f, 0xa9, 0xe9, 0x11, 0xa4, 0xe0, 0x2e, 0x9c, 0x55, 0x93, 0xa3, 0xc1, 0x36,
	0xa7, 0x6a, 0xfe, 0xee, 0xa4, 0x6d, 0x23, 0x05, 0x99, 0x6b, 0xba, 0xde, 0x2d, 0x27, 0x75, 0xe0,
	0xb4, 0x9a, 0x24, 0x57, 0xc4, 0xf2, 0xc6, 0x83, 0x11, 0x52, 0xf0, 0x19, 0xe0, 0x6a, 0xc6, 0xf5,
	0xa8, 0x6d, 0x5d, 0x22, 0x55, 0xfb, 0x63, 0x73, 0xe9, 0x2b, 0xed, 0xe2, 0x4f, 0xe1, 0x48, 0x2c,
	0x39, 0x4b, 0x96, 0xd1, 0xaa, 0xf8, 0x39, 0x34, 0xe8, 0x2e, 0x80, 0xdf, 0x42, 0x33, 0xf6, 0x85,
	0x60, 0x3c, 0xbc, 0xc7, 0x76, 0x2a, 0xb4, 0x7a, 0x61, 0x17, 0x50, 0xba, 0xe1, 0xc0, 0x5f, 0xc3,
	0x61, 0x10, 0x0a, 0xc6, 0x53, 0x7f, 0x55, 0x6e, 0xe5, 0xf1, 0x07, 0xdf, 0xf1, 0xb0, 0x7c, 0x1c,
	0xe8, 0xb6, 0x54, 0xb3, 0xa0, 0x5d, 0xe5, 0xc3, 0xff, 0x87, 0xff, 0x51, 0xe2, 0xd1, 0xfd, 0x89,
	0x20, 0x68, 0x17, 0xe1, 0x91, 0x69, 0x91, 0x01, 0x45, 0xca, 0xae, 0x90, 0xfc, 0xe4, 0xd8, 0x16,
	0xb1, 0x3c, 0x73, 0x30, 0x42, 0xea, 0xab, 0x15, 0x40, 0x10, 0x15, 0x8d, 0xa4, 0x17, 0xaf, 0xda,
	0x86, 0x6c, 0xc3, 0xc9, 0x05, 0x24, 0xbf, 0xf4, 0x17, 0x81, 0x58, 0xae, 0xa7, 0x79, 0x6f, 0x3d,
	0xf9, 0x16, 0x2e, 0xa2, 0x2f, 0x93, 0xf9, 0x75, 0xef, 0xb6, 0x77, 0xf1, 0x45, 0x61, 0xfd, 0xa5,
	0x3e, 0x19, 0xe6, 0x5c, 0xc6, 0x2a, 0x60, 0xa1, 0xd0, 0x07, 0x6b, 0x11, 0x2d, 0x58, 0xa8, 0x5f,
	0xf2, 0x78, 0xa6, 0xa7, 0x17, 0xd3, 0x03, 0x89, 0x7a, 0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x32, 0xdd, 0xec, 0xee, 0x5b, 0x07, 0x00, 0x00,
>>>>>>> upstream/master
}
